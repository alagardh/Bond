module Script where

import Daml.Script
import BondRequest
import Account
import AddToWallet
import DA.Date

setup : Script ()
setup = script do
  bank <- allocatePartyWithHint "EuropeanBank" (PartyIdHint "EuropeanBank")
  gs <- allocatePartyWithHint "GSBank" (PartyIdHint "GSBank")
  bny <- allocatePartyWithHint "BNYMellon" (PartyIdHint "BNYMellon")
  
    
  europeanBank <- validateUserId "EuropeanBank"
  gsbank <- validateUserId "GSBank"
  bnymellon <- validateUserId "BNYMellon"
  

  -- create user for seller and buyer
  createUser (User europeanBank (Some (bank))) [CanActAs (bank)]
  createUser (User gsbank (Some (gs))) [CanActAs (gs)]
  createUser (User bnymellon (Some (bny))) [CanActAs (bny)]
  


  cid <- submit gs do
    createCmd BondRequest with
      issuer = bank
      buyer = gs
      amountRequest = 500

  cid1 <- submit gs do
    createCmd BondRequest with
      issuer = bank
      buyer = gs
      amountRequest = 100

  
  cid2 <- submit bank do
    exerciseCmd cid AllowMint

  submit gs do
    exerciseCmd cid2 AddWallet

  cid3 <- submit bank do
    exerciseCmd cid1 AllowMint

  submit gs do
    exerciseCmd cid3 AddWallet

  bnyAccountId <- submit bny do
    createCmd Account with
      accountHolder = bny
      balance = 0

  postId <- submit bny do
    exerciseCmd bnyAccountId PostTrade
      with
        transferType = "receive"
        requestTo = gs
        quantity = 123
        tradeDate = date 2024 Jun 14
        tradeId = "ddfd"

  


  
  -- bnyid <- submit bny do
  --   createCmd TokenRequest
  --     with
  --       transferFrom =  gs
  --       transferTo = bny
  --       transferAmount  = 100

  -- bnyid1 <-submit gs do
  --   exerciseCmd bnyid  AllowTransferTokens

  -- cide <- submit bofa  do
  --   createCmd AccountCreationRequest with
  --     accountHolder = bofa
  --     holderLocateIn = bny

 
  -- submit bny do
  --   exerciseCmd cide ApproveRequest

  -- [(bofaId, bofaData)] <- query @Account bofa

  -- submit bny do
  --   exerciseCmd bofaId TokenDistribute
  --     with 
  --       amount = 23


  return()
    

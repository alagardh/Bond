module Account where



template Account
  with
    holderLocateIn : Party
    accountHolder : Party
    balance : Int
    afterDistribute : Int

  where
    signatory holderLocateIn , accountHolder

    ensure balance >= 0
    
    key  (accountHolder,holderLocateIn) : (Party,Party)
    maintainer key._1


    choice TokenDistribute :  (ContractId Account)
      with
        amount : Int
      controller holderLocateIn
        do
          assertMsg "transferTo and holder should not be same" (accountHolder /= holderLocateIn)
          getholderData <- fetchByKey @Account (holderLocateIn,holderLocateIn)
          assertMsg "transfer is asset is more than holdings" (getholderData._2.afterDistribute >= amount)
          cid <- create this 
            with
              balance = balance + amount 
          archive getholderData._1
          create Account with
              accountHolder = getholderData._2.accountHolder
              balance = getholderData._2.balance
              holderLocateIn = getholderData._2.holderLocateIn
              afterDistribute = getholderData._2.afterDistribute - amount
          return  cid

    
  
    


